
Shard schema creation:
create user SHARDUSERTEST identified by oracle;

grant connect, resource, alter session to SHARDUSERTEST;
grant execute on dbms_crypto to SHARDUSERTEST;
grant create table, create procedure, create tablespace, create materialized view to SHARDUSERTEST;
grant unlimited tablespace to SHARDUSERTEST;
grant select_catalog_role to SHARDUSERTEST;
grant all privileges to SHARDUSERTEST;
grant gsmadmin_role to SHARDUSERTEST;
grant execute on dbms_soda_admin to SHARDUSERTEST;
grant execute on dbms_soda to SHARDUSERTEST;
grant execute on exec_shard_plsql to SHARDUSERTEST;
grant gsm_pooladmin_role to SHARDUSERTEST;
grant ctxapp to SHARDUSERTEST;

Tablespace set creation for application schema:

CREATE TABLESPACE SET TTTSP_SET_1 using template (datafile size 100m autoextend on next 10M maxsize unlimited extent management local segment space management auto); 
CREATE TABLESPACE SET TTTSP_SET_2 using template (datafile size 100m autoextend on next 10M maxsize unlimited extent management local segment space management auto); 
CREATE TABLESPACE store_tsp datafile size 100m autoextend on next 10M maxsize unlimited extent management local uniform size 1m;

Core Objects creations in app schema: SHARDUSERTEST

CREATE SHARDED TABLE "CUSTOMER_AUTH"
( "USER_ID" NUMBER NOT NULL ENABLE,
"EMAIL" VARCHAR2(200 BYTE) NOT NULL ENABLE,
"PASSWORD" VARCHAR2(100 BYTE) NOT NULL ENABLE,
PRIMARY KEY ("USER_ID")
)TABLESPACE SET TTTSP_SET_1   PARTITION BY CONSISTENT HASH (USER_ID) PARTITIONS AUTO;

CREATE SHARDED TABLE "CUSTOMER"
( "USER_ID" NUMBER NOT NULL ENABLE,
"NAME" VARCHAR2(100 BYTE),
"PHONE" NUMBER,
"ZIP" NUMBER,
"ADDRESS" VARCHAR2(500 BYTE),
"USER_ROLE" VARCHAR2(20 BYTE) default 'admin',
CONSTRAINT fk_user_info_parent FOREIGN KEY ("USER_ID")
REFERENCES "CUSTOMER_AUTH" ("USER_ID") ENABLE
) PARTITION BY REFERENCE (fk_user_info_parent);


CREATE SHARDED TABLE "CART"
( "USER_ID" NUMBER NOT NULL ENABLE,
"PRODUCT_ID" VARCHAR2(200 BYTE),
"QUANTITY" NUMBER,
CONSTRAINT fk_cart_parent FOREIGN KEY ("USER_ID")
REFERENCES "CUSTOMER_AUTH" ("USER_ID") ENABLE
)PARTITION BY REFERENCE (fk_cart_parent);


CREATE SHARDED TABLE "ORDERS"
( "ORDER_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE,
"ORDER_DATE" DATE,
"ORDER_STATUS" VARCHAR2(10 BYTE),
"ORDEREDBY_CUSTOMER_ID" NUMBER NOT NULL ENABLE,
CONSTRAINT  pk_orders PRIMARY KEY (orderedby_customer_id, ORDER_ID),
CONSTRAINT  fk_orders_parent FOREIGN KEY (orderedby_customer_id)
REFERENCES "CUSTOMER_AUTH" ("USER_ID") ENABLE
) PARTITION BY REFERENCE (fk_orders_parent);

CREATE SHARDED TABLE "LINE_ITEM"
( "ORDER_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE,
"USER_ID" NUMBER NOT NULL ENABLE,
"ADDRESS" VARCHAR2(200 BYTE),
"PHONE" NUMBER,
"ZIP" NUMBER,
"PRODUCT_ID" VARCHAR2(100 BYTE),
"PRODUCT_NAME" VARCHAR2(400 BYTE),
"PRODUCT_IMAGE" VARCHAR2(200 BYTE),
"PRODUCT_COST" NUMBER,
"PRODUCT_QUANTITY" NUMBER,
"ORDER_STATUS" VARCHAR2(100 BYTE),
"ISDELIVERED" VARCHAR2(10 BYTE),
"INTRANSITCOMMENTS" VARCHAR2(200 BYTE),
"DATE_ORDERED" DATE,
CONSTRAINT  pk_lineitems PRIMARY KEY (USER_ID, ORDER_ID,PRODUCT_ID),
CONSTRAINT  fk_lineitems_parent FOREIGN KEY (USER_ID,ORDER_ID)
REFERENCES ORDERS on delete cascade 
)PARTITION BY REFERENCE (fk_lineitems_parent);


CREATE SHARDED TABLE "PRODUCTS"
( "SKU" VARCHAR2(255 BYTE) NOT NULL ENABLE,
"JSON_TEXT" CLOB,
CHECK ("JSON_TEXT" is json strict) ENABLE,
PRIMARY KEY ("SKU")
) TABLESPACE SET TTTSP_SET_2 PARTITION BY CONSISTENT HASH (SKU) PARTITIONS AUTO;


CREATE SHARDED TABLE "REVIEWS"
( "REVID" VARCHAR2(255 BYTE) NOT NULL ENABLE,
"SKU" VARCHAR2(255 BYTE) NOT NULL ENABLE, 
"JSON_TEXT" CLOB,
"SENTI_SCORE" NUMBER(4,0),
CHECK ("JSON_TEXT" is json strict) ENABLE,
CONSTRAINT  pk_reviews PRIMARY KEY (SKU,REVID), 
CONSTRAINT  fk_reviews_parent FOREIGN KEY (SKU)
REFERENCES PRODUCTS (SKU) ENABLE
) PARTITION BY REFERENCE (fk_reviews_parent);


CREATE SHARDED TABLE "INVENTORY"
( "STORE_ID" VARCHAR2(100 BYTE) NOT NULL ENABLE,
"PRODUCT_ID" VARCHAR2(200 BYTE) NOT NULL ENABLE,
"PRODUCT_COUNT" NUMBER(*,0) DEFAULT 0,
"PRODUCT_STATUS" VARCHAR2(5 BYTE) DEFAULT 'false',
CONSTRAINT  pk_inventory PRIMARY KEY (PRODUCT_ID,STORE_ID), 
CONSTRAINT  fk_inventory_parent FOREIGN KEY (PRODUCT_ID)
REFERENCES "PRODUCTS" ("SKU") ENABLE
) PARTITION BY REFERENCE (fk_inventory_parent);


CREATE DUPLICATED TABLE "STORE"
( "STORE_ID" VARCHAR2(100 BYTE),
"STORE_NAME" VARCHAR2(100 BYTE),
"STORE_LOCATION" VARCHAR2(100 BYTE),
"STORE_DESCRIPTION" VARCHAR2(100 BYTE),
"OWNER_EMAIL" VARCHAR2(200 BYTE),
"OWNER_USER_ID" NUMBER,
PRIMARY KEY ("STORE_ID")
) TABLESPACE store_tsp ;

